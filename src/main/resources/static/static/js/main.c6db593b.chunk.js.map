{"version":3,"sources":["actions/Types.js","reducers/doctorReducer.js","reducers/errorReducer.js","reducers/PatientReducer.js","reducers/Authreducer.js","reducers/Table.js","reducers/rooms.js","reducers/index.js","store.js","actions/DoctorsActions.js","component/Footer.js","component/Card.js","utils/setJWToken.js","actions/AuthAction.js","component/Navbar.js","component/Home.js","component/exceptions/NotFound.js","actions/QueueActions.js","component/Personal.js","actions/PatientActions.js","component/ListRegister.js","component/authtication/Login.js","component/Header.js","component/admin/Queue.js","component/doctor/Doctor.js","component/common/PrivateRoute.js","component/admin/addDoctor.js","actions/RoomsActions.js","App.js","index.js"],"names":["GET_ERRORS","GET_DOCTORS","GET_DOCTOR","GET_PATIENT_SAVE","GET_QUEUE","GET_TOKEN","GET_DOCTOR_TABLE","GET_QUEUE_TABLE","GET_ALL_ROOMS","initialState","doctors","doctor","patient","queue","token","validToken","tables","user","rooms","combineReducers","state","action","type","payload","errors","auth","middleware","thunk","ReactReduxDevTools","window","__REDUX_DEVTOOLS_EXTENSION__","store","navigator","userAgent","includes","createStore","rootReducers","compose","applyMiddleware","getDoctorTable","dispatch","a","axios","get","res","data","body","error","Footer","className","Card","this","props","src","alt","speciality","firstName","lastName","to","id","Component","setJWToken","defaults","headers","common","setCurrentUser","decode","logout","localStorage","removeItem","Navbar","location","href","role","roleName","style","color","username","onClick","borderRadius","signUpChecking","signInChecking","connect","Home","getAllDoctors","filter","roles","map","NotFound","getAllQueue","post","Personal","phone","onChange","bind","onSubmit","e","setState","target","name","value","preventDefault","newPatient","doctorId","addPatient","history","newprops","push","size","length","middleName","data-toggle","data-target","que","index","width","display","price","data-dismiss","placeholder","ListRegister","match","params","getDoctor","getQueue","Login","password","getErrors","login","getToken","newProps","invalid","setItem","jwt_decode","console","log","response","Header","Queue","deleteQueue","addQueue","tableBody","row","status","fontWeight","verticalAlign","margin","borderTop","then","Doctor","accepted","tartib","height","fontSize","padding","component","rest","render","addDoctor","category","Rooms","get_all_rooms","pushDoctor","marginTop","marginRight","float","htmlFor","required","list","marginLeft","outline","room","floor","number","jwtToken","decoded","App","exact","path","Admin","baseURL","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.c6db593b.chunk.js","sourcesContent":["export const GET_ERRORS = \"GET_ERRORS\";\r\nexport const GET_DOCTORS = \"GET_DOCTORS\";\r\nexport const GET_DOCTOR = \"GET_DOCTOR\";\r\nexport const GET_PATIENT_SAVE = \"GET_PATIENT_SAVE\";\r\nexport const GET_QUEUE = \"GET_QUEUE\";\r\nexport const GET_TOKEN = \"GET_TOKEN\";\r\nexport const GET_DOCTOR_TABLE = \"GET_DOCTOR_TABLE\";\r\nexport const GET_QUEUE_TABLE = \"GET_QUEUE_TABLE\";\r\nexport const GET_EDIT_QUEUE = \"GET_EDIT_QUEUE\";\r\nexport const GET_ALL_ROOMS = \"GET_ALL_ROOMS\";\r\n\r\n","import {GET_DOCTORS, GET_DOCTOR} from '../actions/Types';\r\n\r\nconst initialState = {\r\n    doctors : [],\r\n    doctor : {}\r\n}\r\n\r\nexport default function foo(state = initialState, action){\r\n    switch(action.type){\r\n        case GET_DOCTORS :\r\n            return{\r\n                ...state,\r\n                doctors : action.payload\r\n            };\r\n        case GET_DOCTOR :\r\n            return {\r\n                ...state,\r\n                doctor : action.payload\r\n            };\r\n        default : \r\n        return state;\r\n    }\r\n}","import {GET_ERRORS} from '../actions/Types';\r\n\r\nconst initialState = {}\r\n\r\nexport default function foo(state = initialState, action) {\r\n    switch(action.type){\r\n        case GET_ERRORS :\r\n            return {\r\n                ...state,\r\n                errors : action.payload\r\n            };\r\n        default :\r\n         return state;\r\n    }\r\n    \r\n}","import { GET_PATIENT_SAVE, GET_QUEUE} from '../actions/Types';\r\n\r\nconst initialState = {\r\n    patient : {},\r\n    queue : []\r\n}\r\n\r\nexport default function foo(state = initialState, action) {\r\n    switch(action.type){\r\n        case GET_PATIENT_SAVE :\r\n            return {\r\n                ...state,\r\n                patient : action.payload\r\n            };\r\n        case GET_QUEUE :\r\n            return {\r\n                ...state,\r\n                queue : action.payload\r\n            }\r\n        default : \r\n            return state;\r\n    }\r\n}","import {GET_TOKEN} from '../actions/Types';\r\n\r\nconst initialState = {\r\n    token : [],\r\n    validToken : false\r\n}\r\nexport default function foo(state = initialState, action) {\r\n    switch(action.type){\r\n        case GET_TOKEN :\r\n            return {\r\n                ...state,\r\n                token : action.payload,\r\n                validToken : action.payload?true:false\r\n            };\r\n        default :\r\n            return state;\r\n    }\r\n    \r\n}\r\n","import {GET_DOCTOR_TABLE, GET_QUEUE_TABLE} from '../actions/Types';\r\n\r\nconst initialState = {\r\n    tables : [],\r\n    user : {}\r\n}\r\n\r\nexport default function foo(state = initialState, action) {\r\n    \r\n    switch(action.type){\r\n        \r\n        case GET_DOCTOR_TABLE : \r\n            return{\r\n                ...state,\r\n                tables : action.payload.tables,\r\n                user : action.payload.user\r\n            };\r\n        case GET_QUEUE_TABLE : \r\n            return{\r\n                ...state,\r\n                tables : action.payload\r\n            };\r\n        default : \r\n            return state;\r\n    }\r\n    \r\n}","import {GET_ALL_ROOMS} from '../actions/Types';\r\n\r\nconst initialState = {\r\n    rooms : []\r\n}\r\n\r\nexport default function  foo(state = initialState, action) {\r\n    switch(action.type){\r\n        case GET_ALL_ROOMS:\r\n            return{\r\n                ...state,\r\n                rooms : action.payload\r\n            };\r\n        default :\r\n          return state;\r\n    }\r\n    \r\n}","import {combineReducers} from 'redux';\r\nimport doctorReducers from './doctorReducer';\r\nimport errorReducer from './errorReducer';\r\nimport PatientReducer from './PatientReducer';\r\nimport AuthReducer from './Authreducer'; \r\nimport Table from './Table';\r\nimport rooms from './rooms';\r\n\r\nexport default combineReducers({\r\n    doctors: doctorReducers,\r\n    patient : PatientReducer,\r\n    errors : errorReducer,\r\n    auth: AuthReducer,\r\n    tables : Table,\r\n    rooms : rooms\r\n});","import {createStore, applyMiddleware, compose} from 'redux';\r\nimport thunk  from 'redux-thunk';\r\nimport rootReducers from './reducers';\r\n\r\nconst initialState = {};\r\nconst middleware = [thunk];\r\n\r\nconst ReactReduxDevTools = window.__REDUX_DEVTOOLS_EXTENSION__ &&\r\n  window.__REDUX_DEVTOOLS_EXTENSION__()\r\nlet store;\r\n\r\n if(window.navigator.userAgent.includes(\"Chrome\") && ReactReduxDevTools){\r\n   store = createStore(\r\n      rootReducers,\r\n      initialState,\r\n      compose(applyMiddleware(...middleware), ReactReduxDevTools)\r\n    );\r\n}else{\r\n  store = createStore(\r\n    rootReducers,\r\n    initialState,\r\n    compose(applyMiddleware(...middleware))\r\n  )\r\n}\r\n\r\nexport default store;","import axios from 'axios';\r\nimport {GET_DOCTORS, GET_DOCTOR, GET_DOCTOR_TABLE, GET_ERRORS} from './Types';\r\n\r\nexport const getAllDoctors = () => async dispatch =>{\r\n     const res = await axios.get(\"/api/user\")\r\n        dispatch({\r\n            type:GET_DOCTORS,\r\n            payload:res.data.body\r\n        })\r\n};\r\nexport const getDoctor = (id) => async dispatch =>{\r\n     const res = await axios.get(`/api/user/${id}`)\r\n        dispatch({\r\n            type:GET_DOCTOR,\r\n            payload:res.data.body\r\n        });\r\n};\r\nexport const getDoctorTable = () => async dispatch => {\r\n    \r\n    const res = await axios.get(`/api/doctor`)\r\n    try {\r\n        dispatch({\r\n            type : GET_DOCTOR_TABLE,\r\n            payload : res.data.body\r\n        })\r\n    } catch (error) {\r\n         dispatch({\r\n            type : GET_ERRORS,\r\n            payload : error.data\r\n        })\r\n    }\r\n};\r\n\r\nexport const accepted = (id) => async dispatch =>{\r\n    await axios.get(`/api/doctor/${id}`)\r\n    dispatch(getDoctorTable());\r\n};\r\n\r\nexport const pushDoctor = (doctor, history) => async dispatch =>{\r\n   const res =  await axios.post(\"/api/auth/register\", doctor)\r\n     dispatch({\r\n            type : GET_ERRORS,\r\n            payload : res.data\r\n        })\r\n    history.push('/admin');\r\n}","import React from 'react'\r\n\r\nexport default function Footer() {\r\n  return (\r\n        <div className='footer'>\r\n            <div className='container'>\r\n                    <div className='education'>\r\n                        <div className='clinic'>Clinic_Name</div>\r\n                        <div className='footer-ul'>\r\n                            <ul>\r\n                                <li className=\"avtive\">About us</li>\r\n                                <li>Doctors</li>\r\n                                <li>Payment</li>\r\n                                <li>wffhrieuf</li>\r\n                            </ul>\r\n                            <ul>\r\n                                <li className=\"avtive\">About us</li>\r\n                                <li>Doctors</li>\r\n                                <li>Payment</li>\r\n                                <li>wffhrieuf</li>\r\n                            </ul>\r\n                            <ul>\r\n                            <li className=\"avtive\">About us</li>\r\n                            <li>Doctors</li>\r\n                            <li>Payment</li>\r\n                            <li>wffhrieuf</li>\r\n                        </ul>\r\n                        </div>          \r\n                    </div>\r\n            </div>\r\n            <div className='reserve'>All service reserved || 2021-2021</div>\r\n        </div>\r\n  )\r\n}\r\n","import React, { Component } from 'react';\r\nimport {Link} from 'react-router-dom';\r\n\r\n\r\nclass Card extends Component {\r\n    render() {\r\n        const {doctor} = this.props;\r\n        return (\r\n            <div className='card'>\r\n                    <img className='card-img-top' src='/images/3.jpg' alt='rasm topilmadi'/>\r\n                    <div className='card-body'>\r\n                            <p className='job'>{doctor.speciality}</p> \r\n                            <p className='card-title'>{doctor.firstName} {doctor.lastName}</p>\r\n                            <Link to={`/listRegister/${doctor.id}`}\r\n                            className='btn btn-primary'>Qabulga yozilish</Link>\r\n                    </div>\r\n                </div>\r\n        )\r\n    }\r\n};\r\n\r\n\r\n\r\nexport default (Card);\r\n\r\n\r\n\r\n","import axios from 'axios';\r\n\r\nconst setJWToken = token => {\r\n    if (token) {\r\n        // Apply to every request\r\n        axios.defaults.headers.common['Authorization'] = token;\r\n    } \r\n};\r\nexport default setJWToken;","import axios from \"axios\";\r\nimport { GET_ERRORS, GET_TOKEN } from \"../actions/Types\";\r\nimport jwt_decode from \"jwt-decode\";\r\nimport setJWToken from \"../utils/setJWToken\";\r\n\r\nexport const getToken = (login, history) => async (dispatch) => {\r\n  try {\r\n    const res = await axios.post(\"api/auth/login\", login);\r\n    const token = await res.data.body;\r\n    localStorage.setItem(\"jwtToken\", token);\r\n    setJWToken(token);\r\n    const decode = await jwt_decode(token);\r\n    dispatch(setCurrentUser(decode));\r\n  } catch (errors) {\r\n    console.log(errors);\r\n    dispatch({\r\n      type: GET_ERRORS,\r\n      payload: errors.response.data,\r\n    });\r\n  }\r\n};\r\nexport const setCurrentUser = (decode) => {\r\n  return {\r\n    type: GET_TOKEN,\r\n    payload: decode,\r\n  };\r\n};\r\n\r\nexport const logout = () => (dispatch) => {\r\n  // Remove token from localStorage\r\n  localStorage.removeItem(\"jwtToken\");\r\n  // Remove auth header from future request\r\n  setJWToken(false);\r\n  // Set current user to {} which will set isAuthenticated to false\r\n  dispatch(setCurrentUser({}));\r\n};\r\n","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport {Link} from 'react-router-dom';\r\nimport PropTypes from 'prop-types';\r\nimport {logout} from '../actions/AuthAction';\r\n\r\n\r\n\r\nclass  Navbar extends Component{\r\n\r\n \r\n\r\n    logout = () => {\r\n            this.props.logout();\r\n            window.location.href = \"/\"\r\n    };\r\n\r\n    \r\n    signUpChecking (auth){\r\n\r\n        const {token, validToken} = auth\r\n\r\n        if (validToken) {\r\n            if (token.role[0].roleName===\"doctor\") { \r\n                return (\r\n                  <Link style={{color:'white'}} to={`/doctor`}>\r\n                    <i className=\"fas fa-user-circle mr-1\"></i>\r\n                    {token.username}\r\n                  </Link>\r\n                );\r\n            }\r\n        }else{\r\n            return (\r\n              <Link className=\"nav-link text-white\" to=\"/admin\">\r\n                <h4>Home</h4>\r\n              </Link>\r\n            );\r\n        } \r\n    }\r\n\r\n    signInChecking(auth){\r\n\r\n        if (auth.validToken) {\r\n            return (\r\n                <Link className=\"nav-link bg-red text-white\" onClick={this.logout} to=\"logout\">\r\n                    Logout\r\n                </Link>\r\n            )\r\n        }\r\n\r\n        return (\r\n            <Link className=\"nav-link text-white\" to=\"/login\">\r\n                Login\r\n            </Link>\r\n        )\r\n    }\r\n\r\n\r\n\r\n  render(){ \r\n\r\n    return (\r\n    <nav className={this.props.auth.validToken?` navbar bg-info pl-5 pr-5`:`navbar`} style={{borderRadius:\"10px\"}} >\r\n        {this.signUpChecking(this.props.auth)}\r\n        <ul className =\"navbar-nav\">\r\n            <li className=\"nav-item\"><Link className='nav-link text-white' to='#'>Rus</Link></li>\r\n            <li className=\"nav-item\"><Link className='nav-link text-white' to='#'>Uzb</Link></li>\r\n            <li className=\"nav-item\">\r\n                {this.signInChecking(this.props.auth)}\r\n            </li>\r\n        </ul>\r\n    </nav>\r\n  )\r\n  }\r\n};\r\n\r\nNavbar.propTypes = {\r\n  auth: PropTypes.object.isRequired\r\n}\r\n\r\nconst mapStateToPorps = state => ({\r\n    auth : state.auth\r\n});\r\n\r\nexport default connect(mapStateToPorps,{logout}) (Navbar);\r\n","import React, { Component } from 'react';\r\nimport {connect} from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\nimport {getAllDoctors} from '../actions/DoctorsActions';\r\nimport Footer from './Footer';\r\nimport Card from './Card';\r\nimport '../Home.css';\r\nimport Navbar from './Navbar';\r\n\r\n\r\n class Home extends Component {\r\n     componentDidMount(){\r\n         this.props.getAllDoctors();\r\n     }\r\n    render() {\r\n        const {doctors} = this.props.doctors;\r\n        return (\r\n             <div className='container-fuild'>\r\n            <div className='container'>\r\n                <Navbar />\r\n                <div className='header'>\r\n                  <div className='lorem'>\r\n                      <h1>Lorem Ipsum</h1>\r\n                      <p>Lorem ipsum is simvefsoivov ornibnu nirunb nirutun unrtub \r\n                          eoubviru nrtuparghru rtubirtoj rt rpotjhtr jortjhoitbj erthbu\r\n                          tijriubhiu retpu jrotjoitrj rotiohegorij rotigjoergjpo jrotjo\r\n                      </p>\r\n                  </div>\r\n                  \r\n                  <div className=\"cards\" >\r\n                   {doctors.filter(doctor => doctor.roles[0].roleName !== 'admin').map((doctor) => {\r\n                     return(\r\n                        <Card doctor={doctor} key={doctor.id} />\r\n                     );   \r\n                                    \r\n                   })}\r\n                </div>\r\n               \r\n                </div>           \r\n            </div>\r\n            <Footer/>\r\n          </div>\r\n        )\r\n    }\r\n};\r\n\r\nHome.propTypes = {\r\n    getAllDoctors : PropTypes.func.isRequired,\r\n    doctors : PropTypes.object.isRequired\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n    doctors: state.doctors\r\n})\r\n\r\nexport default connect(mapStateToProps, {getAllDoctors}) (Home);\r\n","import React, {Component} from 'react';\r\n\r\nclass NotFound extends Component {\r\n    render() {\r\n        return (\r\n            <div>\r\n                Not Found\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default NotFound;","import {GET_ERRORS, GET_QUEUE_TABLE} from './Types';\r\nimport axios from 'axios';\r\n\r\nexport const getAllQueue = (type) => async dispatch => {\r\n    const res = await axios.post(`/api/queue`,type)\r\n    try{\r\n        dispatch({\r\n        type : GET_QUEUE_TABLE,\r\n        payload : res.data.body\r\n    })\r\n    }catch(error){\r\n        dispatch({\r\n        type : GET_ERRORS,\r\n        payload : res.data.body\r\n    })\r\n  }\r\n};\r\n\r\nexport const deleteQueue = (id, history) => async dispatch =>{\r\n    await axios.get(`/api/queue/delete/${id}`).then(res =>{console.log(\" s d\")})\r\n    dispatch(getAllQueue());\r\n}\r\n\r\nexport const addQueue = (id, history) => async dispatch => {\r\n  await axios.get(`/api/queue/addQueue/${id}`);\r\n  dispatch(getAllQueue());\r\n};\r\n","import React, { Component } from 'react';\r\nimport {Link} from 'react-router-dom';\r\nimport {connect} from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\nimport {addPatient} from '../actions/PatientActions';\r\nimport {getAllQueue} from '../actions/QueueActions';\r\n\r\n\r\nclass Personal extends Component {\r\n    constructor(){\r\n        super();\r\n        this.state = {\r\n            firstName : '',\r\n            lastName : '',\r\n            phone : ''\r\n           \r\n        }\r\n        this.onChange = this.onChange.bind(this);\r\n        this.onSubmit = this.onSubmit.bind(this);\r\n    };\r\n   componentDidMount(){\r\n        this.props.getAllQueue();\r\n   }\r\n\r\n    onChange(e){\r\n        this.setState({[e.target.name]: e.target.value})\r\n    }\r\n\r\n    onSubmit(e){\r\n      e.preventDefault()\r\n      const newPatient = {\r\n          firstName : this.state.firstName,\r\n          lastName : this.state.lastName,\r\n          phone : this.state.phone,\r\n          doctorId : this.props.data.id\r\n      }\r\n      this.props.addPatient(newPatient, this.props.history)\r\n    }\r\n   componentWillReceiveProps(newprops){\r\n       if (!newprops.errors) {\r\n           this.props.history.push('/')\r\n       }\r\n   }\r\n    render() {\r\n       const {queue} = this.props.patient;\r\n       const size  = queue.length;\r\n       \r\n        return (\r\n          <div className='list'>\r\n            <p>Toshkent viloyat xususiy klinika stomotologi</p>\r\n            <div className='row'>\r\n                <div className='col-md-4'>\r\n                    <img className='img' src='/images/sullivan.jpg' alt='rasm topilmadi'/>\r\n                </div>\r\n                <div className='col-md-8'>\r\n                    <p className='fullName'>{this.props.data.firstName} {this.props.data.lastName} {this.props.data.middleName}</p>    \r\n                </div>       \r\n            </div>\r\n            <div className='row'>\r\n                <div className='col'>\r\n                    <p className='job'><b>Mutaxasisligi:</b>{this.props.data.speciality}</p>\r\n                    <p className='job'><b>O'quv yo'nalishi</b> {this.props.data.speciality}</p>\r\n                    <p className='job'><b>O'quv yo'nalishi</b> {this.props.data.speciality}</p>\r\n                </div>\r\n                <div className='col'>\r\n                    <Link to='/' className='btn btn-success' >Boshqa bo'lim tanlash</Link>\r\n                </div>\r\n            </div>\r\n            <div className='row'>\r\n                <div className='col-md-12'>\r\n                     <button type=\"button\"  className=\"btn btn-primary\" data-toggle=\"modal\"  data-target=\"#myModal\" >Ro'yhatga yozilish</button>\r\n                </div>\r\n            </div> \r\n           \r\n            <div className='row'>\r\n               {queue.map((que, index) => {\r\n                    return(\r\n                        <div className='col-md-4 mb-4' key={que.id}>\r\n                          <p className='btn-green index' >{index + 1}){que.id}</p>\r\n                        </div>\r\n                    )\r\n               })}\r\n            </div> \r\n                <div className=\"modal\" id=\"submit\">\r\n                    <div className=\"modal-dialog\">\r\n                        <div className=\"modal-content\">    \r\n                            <div className=\"modal-body\">\r\n                                <form className=\"needs-validation\" >\r\n                                    <p><div style={{width:\"200px\", display:\"inline-block\"}}>Ism:</div> <strong>{this.state.firstName}</strong> </p>\r\n                                    <p><div style={{width:\"200px\", display:\"inline-block\"}}>Familiya:</div> <strong>{this.state.lastName}</strong> </p>\r\n                                    <p><div style={{width:\"200px\", display:\"inline-block\"}}>Tel-raqam:</div> <strong>{this.state.phone}</strong> </p>\r\n                                    <p><div style={{width:\"200px\", display:\"inline-block\"}}>Price:</div> <strong>{this.props.data.price}</strong> </p>\r\n                                    <p><div style={{width:\"200px\", display:\"inline-block\"}}>navbat:</div> <strong>{size+1}</strong> </p>\r\n                                     <p><div style={{width:\"200px\", display:\"inline-block\"}}>Id-raqam:</div> <strong>{this.props.data.id}</strong> </p>\r\n                                    <div className='col-md-12'>\r\n                                        <button type=\"button\" className=\"btn btn-primary\" data-toggle=\"modal\"  data-dismiss=\"modal\" \r\n                                        onClick={this.onSubmit} >Tasdiqlash</button>\r\n                                    </div>\r\n                                </form>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"modal\" id=\"myModal\">\r\n                    <div className=\"modal-dialog\">\r\n                        <div className=\"modal-content\">    \r\n                            <div className=\"modal-body\">\r\n                                <form className=\"needs-validation\" >\r\n                                    <div className=\"form-group\">\r\n                                        <label>First Name:</label>\r\n                                        <input type=\"text\" className=\"form-control\" id=\"uname\" placeholder=\"Enter firstName\" \r\n                                        name=\"firstName\"  onChange={this.onChange}/>\r\n                                        <div className=\"valid-feedback\">Valid.</div>\r\n                                        <div className=\"invalid-feedback\">Please fill out this field.</div>\r\n                                    </div>\r\n                                    <div className=\"form-group\">\r\n                                        <label>Last Name:</label>\r\n                                        <input type=\"text\" className=\"form-control\" id=\"pwd\" placeholder=\"Enter lastName\"\r\n                                        name=\"lastName\"  onChange={this.onChange}/>\r\n                                        <div className=\"valid-feedback\">Valid.</div>\r\n                                        <div className=\"invalid-feedback\">Please fill out this field.</div>\r\n                                    </div>\r\n                                    <div className=\"form-group\">\r\n                                        <label >Phone number:</label>\r\n                                        <input type=\"text\" className=\"form-control\" id=\"phone\" placeholder=\"+998936667205\"\r\n                                        name=\"phone\"  onChange={this.onChange}/>\r\n                                        <div className=\"valid-feedback\">Valid.</div>\r\n                                        <div className=\"invalid-feedback\">Please fill out this field.</div>\r\n                                    </div>\r\n                                    <div className='col-md-12'>\r\n                                        <button type=\"button\" className=\"btn btn-primary\" data-toggle=\"modal\" data-target=\"#submit\"  data-dismiss=\"modal\" >Ro'yhatga yozilish</button>\r\n                                    </div>\r\n                                </form>\r\n                            </div>\r\n                            <div className=\"modal-footer\">\r\n                                <button type=\"button\" className=\"btn btn-danger\" data-dismiss=\"modal\">Close</button>\r\n                            </div>\r\n                    </div>\r\n                </div>\r\n              \r\n            </div> \r\n        </div>\r\n        \r\n        )\r\n    }\r\n};\r\n\r\nPersonal.propTypes={\r\n    addPatient : PropTypes.func.isRequired,\r\n    getAllQueue : PropTypes.func.isRequired,\r\n    patient : PropTypes.object.isRequired,\r\n    errors : PropTypes.object.isRequired\r\n};\r\n\r\nconst mapStateToPorps = state => ({\r\n    patient : state.patient,\r\n    errors : state.errors\r\n});\r\n\r\nexport default connect(mapStateToPorps, {addPatient, getAllQueue}) (Personal);\r\n","import axios from 'axios';\r\nimport {GET_ERRORS, GET_PATIENT_SAVE, GET_QUEUE} from './Types';\r\n\r\n\r\nexport const addPatient = (newPatient, history) => async dispatch =>{\r\n\r\n    const res = await axios.post(\"/api/patient\", newPatient)\r\n       try {\r\n            dispatch({\r\n            type:GET_PATIENT_SAVE,\r\n            payload : res.data.body\r\n        }); \r\n         history.push('/');\r\n       } catch (error) {\r\n           dispatch({\r\n            type:GET_ERRORS,\r\n            payload : error.data\r\n          })\r\n       }; \r\n          \r\n};\r\n\r\nexport const getQueue = (id) => async dispatch =>{\r\n    const res = await axios.get(`/api/queue/${id}`)\r\n    dispatch({\r\n        type: GET_QUEUE,\r\n        payload : res.data.body\r\n    })\r\n};","import React, { Component } from 'react';\r\nimport Personal from './Personal';\r\nimport Footer from './Footer'\r\nimport {connect} from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\nimport {getDoctor} from '../actions/DoctorsActions';\r\nimport {getQueue} from '../actions/PatientActions';\r\nimport Navbar from './Navbar';\r\n\r\nclass ListRegister extends Component {\r\n    componentDidMount(){\r\n        const {id} = this.props.match.params;\r\n        this.props.getDoctor(id);\r\n        this.props.getQueue(id);\r\n    }\r\n    render() {\r\n        const {queue, doctor} = this.props;\r\n        return (\r\n           <div className='container-fuild bg'>\r\n                <Navbar />\r\n               <div className='container'>\r\n                    <Personal data={doctor} queue={queue}/>                   \r\n               </div>\r\n               <Footer/>\r\n            </div>\r\n        )\r\n    }\r\n};\r\n\r\nListRegister.propTypes = {\r\n    getDoctor: PropTypes.func.isRequired,\r\n    doctor : PropTypes.object.isRequired,\r\n    getQueue: PropTypes.func.isRequired,\r\n    queue : PropTypes.object.isRequired\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    doctor : state.doctors.doctor,\r\n    queue : state.patient.queue\r\n})\r\n\r\nexport default connect(mapStateToProps, {getDoctor,getQueue}) (ListRegister);\r\n","import React, { Component } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\nimport { getToken } from \"../../actions/AuthAction\";\r\n\r\nclass Login extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      errors: {},\r\n      username: \"\",\r\n      password: \"\",\r\n    };\r\n    this.onChange = this.onChange.bind(this);\r\n    this.onSubmit = this.onSubmit.bind(this);\r\n    this.getErrors = this.getErrors.bind(this);\r\n  }\r\n\r\n  onChange(e) {\r\n    this.setState({ [e.target.name]: e.target.value });\r\n  }\r\n  onSubmit(e) {\r\n    e.preventDefault();\r\n    const login = {\r\n      username: this.state.username,\r\n      password: this.state.password,\r\n    };\r\n    this.props.getToken(login, this.props.history);\r\n  }\r\n  componentDidMount() {\r\n    if (this.props.auth.validToken) {\r\n      if (this.props.auth.token.role[0].roleName === \"admin\") {\r\n        this.props.history.push(\"/admin\");\r\n      } else {\r\n        this.props.history.push(\"/doctor\");\r\n      }\r\n    }\r\n  }\r\n\r\n  componentWillReceiveProps(newProps) {\r\n    if (newProps.auth.validToken) {\r\n      if (newProps.auth.token.role[0].roleName === \"admin\") {\r\n        newProps.history.push(\"/admin\");\r\n      } else {\r\n        newProps.history.push(\"/doctor\");\r\n      }\r\n    }\r\n    if (newProps.errors) {\r\n      this.setState({ errors: newProps.errors.errors });\r\n    }\r\n  }\r\n\r\n  getErrors(errors) {\r\n    if (errors) {\r\n      if (errors.invalid)\r\n        return (\r\n          <div className=\"pb-3 pt-3\">\r\n            <div className=\"alert alert-danger text-center m-auto\" role=\"alert\">\r\n              {errors.invalid}\r\n            </div>\r\n          </div>\r\n        );\r\n      if (errors.username) {\r\n        return (\r\n          <div className=\"pb-3 pt-3\">\r\n            <div className=\"alert alert-danger text-center m-auto\" role=\"alert\">\r\n              {errors.username}\r\n            </div>\r\n          </div>\r\n        );\r\n      }\r\n    }\r\n  }\r\n  render() {\r\n    const { errors } = this.state;\r\n    return (\r\n      <div className=\"container m-5\">\r\n        <h1 className=\"text-center\">Login</h1>\r\n        <div className=\"mt-5\" style={{ width: \"400px\" }}>\r\n          {this.getErrors(errors)}\r\n          <form className=\"needs-validation\" onSubmit={this.onSubmit}>\r\n            <div className=\"form-group\">\r\n              <label>Username:</label>\r\n              <input\r\n                type=\"text\"\r\n                className=\"form-control\"\r\n                id=\"uname\"\r\n                placeholder=\"Enter username\"\r\n                name=\"username\"\r\n                onChange={this.onChange}\r\n              />\r\n              <div className=\"valid-feedback\">Valid.</div>\r\n              <div className=\"invalid-feedback\">\r\n                Please fill out this field.\r\n              </div>\r\n            </div>\r\n            <div className=\"form-group\">\r\n              <label>Password:</label>\r\n              <input\r\n                type=\"password\"\r\n                className=\"form-control\"\r\n                id=\"pwd\"\r\n                placeholder=\"Enter password\"\r\n                name=\"password\"\r\n                onChange={this.onChange}\r\n              />\r\n              <div className=\"valid-feedback\">Valid.</div>\r\n              <div className=\"invalid-feedback\">\r\n                Please fill out this field.\r\n              </div>\r\n            </div>\r\n            <div className=\"col-md-12\">\r\n              <button type=\"submit\" className=\"btn btn-primary\">\r\n                Login\r\n              </button>\r\n            </div>\r\n          </form>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nLogin.propTypes = {\r\n  getToken: PropTypes.func.isRequired,\r\n  errors: PropTypes.object.isRequired,\r\n  auth: PropTypes.object.isRequired,\r\n};\r\n\r\nconst mapStateToPorps = (state) => ({\r\n  errors: state.errors,\r\n  auth: state.auth,\r\n});\r\n\r\nexport default connect(mapStateToPorps, { getToken })(Login);\r\n","import React, { Component } from 'react'\r\nimport { Link } from 'react-router-dom';\r\nimport {logout} from '../actions/AuthAction';\r\nimport {connect} from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\n\r\nclass Header extends Component {\r\n    \r\n  logout = () => {\r\n    this.props.logout();\r\n    window.location.href = \"/\";\r\n  };\r\n\r\n  signInChecking(auth){\r\n\r\n        if (auth.validToken) {\r\n            return (\r\n                <Link className=\"nav-link bg-red text-white\" onClick={this.logout} to=\"logout\">\r\n                    Logout\r\n                </Link>\r\n            )\r\n        }\r\n          return (\r\n            <Link className=\"nav-link text-white\" to=\"/login\">\r\n                Login\r\n            </Link>\r\n        )\r\n    }\r\n\r\n\r\n  render() {\r\n    return (\r\n      <nav\r\n        className=\"navbar bg-dark navbar-dark pl-2 pr-2 m-1\"\r\n        style={{ borderRadius: \"10px\" }}\r\n      >\r\n        <Link className=\"navbar-brand\" to=\"/admin\">\r\n          Name\r\n        </Link>\r\n        <ul className=\"navbar-nav\">\r\n          <li className=\"nav-item first\">\r\n            <Link className=\"nav-link\" to=\"#\">\r\n              <i className=\"fa fa-phone\"></i>9387458324\r\n            </Link>\r\n          </li>\r\n          <li className=\"nav-item\">\r\n            <Link className=\"nav-link\" to=\"/addDoctor\">\r\n              <i className=\"fa fa-phone\"></i>Add Doctor\r\n            </Link>\r\n          </li>\r\n          <li className=\"nav-item\">\r\n            <Link className=\"nav-link\" to=\"#\">\r\n              Rus\r\n            </Link>\r\n          </li>\r\n          <li className=\"nav-item\">\r\n            <Link className=\"nav-link\" to=\"#\">\r\n              Uzb\r\n            </Link>\r\n          </li>\r\n          {this.signInChecking(this.props.auth)}\r\n        </ul>\r\n      </nav>\r\n    );\r\n  }\r\n}\r\nHeader.propTypes = {\r\n  auth: PropTypes.object.isRequired,\r\n};\r\n\r\nconst mapStateToPorps = (state) => ({\r\n  auth: state.auth,\r\n});\r\n\r\nexport default connect(mapStateToPorps, { logout })(Header);\r\n","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport {connect} from 'react-redux';\r\nimport {getAllQueue, deleteQueue, addQueue} from '../../actions/QueueActions';\r\nimport Header from '../Header';\r\n\r\n\r\n class Queue extends Component {\r\n     constructor(){\r\n         super()\r\n         this.state ={\r\n             tables : []\r\n         }\r\n     }\r\n     \r\n     componentDidMount(){\r\n        if (!this.props.auth.validToken && !this.props.auth.token.role[0].roleName === 'admin') {\r\n             this.props.history.push(\"/login\")\r\n        }\r\n        this.props.getAllQueue(\"A\");     \r\n     }\r\n    \r\n     componentWillReceiveProps(newProps){\r\n        this.setState({\r\n                tables :newProps.tables\r\n        })\r\n     }\r\n     onClick(type){\r\n         this.props.getAllQueue(type);\r\n         this.setState({\r\n             tables:this.props.tables\r\n         }) \r\n     }\r\n     deleteQueue(id){\r\n         this.props.deleteQueue(id, this.props.history);\r\n     }\r\n     addQueue(id){\r\n        this.props.addQueue(id, this.props.history);\r\n     }\r\n   \r\n    render() { \r\n            const {tables} = this.state;\r\n            let tableBody ;\r\n          if(tables.length > 0){\r\n              tableBody =tables.map(row =>{\r\n                               return (\r\n                                 <tr key={row.id} className=\"text-center\">\r\n                                   <td>{row.name}</td>\r\n                                   <td>{row.id}</td>\r\n                                   <td>{row.patient.firstName}</td>\r\n                                   <td>{row.patient.lastName}</td>\r\n                                   <td>{row.patient.phone}</td>\r\n                                   <td>\r\n                                     <button\r\n                                       className={`${\r\n                                         row.status\r\n                                           ? \"btn btn-light\"\r\n                                           : \"btn btn-primary\"\r\n                                       }`}\r\n                                       style={{\r\n                                         width: \"100px\",\r\n                                         fontWeight: \"bold\",\r\n                                         verticalAlign: \"center\",\r\n                                       }}\r\n                                       onClick={() => this.addQueue(row.id)}\r\n                                     >\r\n                                       ok\r\n                                     </button>\r\n                                   </td>\r\n                                   <td>\r\n                                     <button\r\n                                       className=\"btn btn-danger\"\r\n                                       style={{\r\n                                         width: \"100px\",\r\n                                         fontWeight: \"bold\",\r\n                                         verticalAlign: \"center\",\r\n                                       }}\r\n                                       onClick={() => this.deleteQueue(row.id)}\r\n                                     >\r\n                                       delete\r\n                                     </button>\r\n                                   </td>\r\n                                 </tr>\r\n                               );\r\n                           })\r\n                        }else{\r\n                            tableBody = \"loading...\"\r\n                        }\r\n        return (\r\n            <>\r\n                <div  style={{width:'1400px', margin:'0 auto'}}>\r\n                        <Header />\r\n                        <div className=\"btn-group \">\r\n                            <button type=\"button\" className=\"btn btn-light border pr-5 pl-5 mr-2\" style={{borderRadius:'10px', fontWeight:'bold'}}onClick={()=>this.onClick(\"A\")}>A</button>\r\n                            <button type=\"button\" className=\"btn btn-light border pr-5 pl-5 mr-2\" style={{borderRadius:'10px', fontWeight:'bold'}}onClick={()=>this.onClick(\"B\")}>B</button>\r\n                            <button type=\"button\" className=\"btn btn-light border pr-5 pl-5 mr-2\" style={{borderRadius:'10px', fontWeight:'bold'}}onClick={()=>this.onClick(\"C\")}>C</button>\r\n                            <button type=\"button\" className=\"btn btn-light border pr-5 pl-5 mr-2\" style={{borderRadius:'10px', fontWeight:'bold'}}onClick={()=>this.onClick(\"D\")}>D</button>\r\n                            <button type=\"button\" className=\"btn btn-light border pr-5 pl-5 mr-2\" style={{borderRadius:'10px', fontWeight:'bold'}}onClick={()=>this.onClick(\"E\")}>E</button>\r\n                            <button type=\"button\" className=\"btn btn-light border pr-5 pl-5 mr-2\" style={{borderRadius:'10px', fontWeight:'bold'}}onClick={()=>this.onClick(\"F\")}>F</button>\r\n                        </div>\r\n                    <table className=\"table table-sm border-bottom\" style={{borderTop:'none'}}>\r\n                        <thead>\r\n                        <tr className=\"text-center\">\r\n                            <th className=\"pt-2 pb-2\">Navbat_r</th>\r\n                            <th className=\"pt-2 pb-2\">#Id raqam</th>\r\n                            <th className=\"pt-2 pb-2\">Bemor_ismi</th>\r\n                            <th className=\"pt-2 pb-2\">Bemor_Fam</th>\r\n                            <th className=\"pt-2 pb-2\">Bemor_tel</th>\r\n                            <th className=\"pt-2 pb-2\"></th>\r\n                            <th className=\"pt-2 pb-2\"></th>\r\n                        </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                          {tableBody}\r\n                        </tbody>\r\n                    </table>\r\n                </div>\r\n            </>\r\n        )\r\n    }\r\n};\r\n\r\nQueue.propTypes = {\r\n    getAllQueue : PropTypes.func.isRequired,\r\n    tables : PropTypes.array.isRequired\r\n}\r\n\r\nconst mapStateToPorps = state => ({\r\n    tables : state.tables.tables,\r\n    auth : state.auth\r\n})\r\n\r\n\r\nexport default connect(mapStateToPorps, {getAllQueue, deleteQueue, addQueue})  (Queue);\r\n","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport {connect} from 'react-redux';\r\nimport {getDoctorTable, accepted} from '../../actions/DoctorsActions';\r\nimport Navbar from '../Navbar';\r\n\r\n\r\nclass Doctor extends Component {\r\n    constructor(){\r\n        super()\r\n        this.state = {\r\n            errors : '',\r\n        }\r\n        this.onClick = this.onClick.bind(this);\r\n    }\r\n    \r\n     componentDidMount(){ \r\n        this.props.getDoctorTable();\r\n     }\r\n\r\n     onClick(id){\r\n        this.props.accepted(id);\r\n     }\r\n    render() {\r\n        let tartib = 0;\r\n        const tables = this.props.tables;\r\n        const {firstName, lastName, middleName, speciality} = this.props.user;\r\n        let tableBody;\r\n        tableBody = tables.filter(row => row.status === true).map(row =>{\r\n            return(\r\n              <tr className=\"text-center\" key={row.id}>\r\n                            <td>{(tartib += 1)}</td>\r\n                            <td>#{row.id}</td>\r\n                            <td>{row.patient.firstName}</td>\r\n                            <td>{row.patient.lastName}</td>\r\n                            <td>{row.patient.phone}</td>\r\n                            <td className=\"text-center\">\r\n                              <button\r\n                                onClick={() => this.onClick(row.id)}\r\n                                className={`${\r\n                                  row.accepted\r\n                                    ? \"btn btn-light\"\r\n                                    : \"btn btn-primary\"\r\n                                }`}\r\n                              >\r\n                                Qabulni yakunlash\r\n                              </button>\r\n                            </td>\r\n                          </tr>\r\n            )\r\n        })\r\n    \r\n        return (\r\n          <div className=\"doctor\">\r\n            <Navbar />\r\n            <div className=\"row\">\r\n              <div\r\n                className=\"col-md-3 bg-primary text-center\"\r\n                style={{ height: \"500px\", color: \"white\" }}\r\n              >\r\n                <p\r\n                  style={{\r\n                    color: \"white\",\r\n                    fontSize: \"18px\",\r\n                    padding: \"20px\",\r\n                    width: \"300px\",\r\n                    margin: \"0 auto\",\r\n                  }}\r\n                  className=\"m-4\"\r\n                >\r\n                  Toshkent viloyati xususiy klinika {speciality}\r\n                </p>\r\n                <img\r\n                  className=\"card-img-top mb-4\"\r\n                  src=\"/images/3.jpg\"\r\n                  alt=\"rasm topilmadi\"\r\n                />\r\n                <p>\r\n                  <strong>\r\n                    {firstName} {lastName} {middleName}\r\n                  </strong>\r\n                </p>\r\n              </div>\r\n              <div className=\"col-md-9 \">\r\n                <table className=\"table table-bordered table-sm table-striped\">\r\n                  <thead>\r\n                    <tr className=\"text-center p-5\">\r\n                      <th>Navbat</th>\r\n                      <th>#Id raqam</th>\r\n                      <th>Bemor_ismi</th>\r\n                      <th>Bemor_Fam</th>\r\n                      <th>Bemor_tel</th>\r\n                      <th></th>\r\n                    </tr>\r\n                  </thead>\r\n\r\n                  <tbody>\r\n                  {tableBody}\r\n                  </tbody>\r\n                </table>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        );\r\n    }\r\n};\r\n\r\nDoctor.propTypes ={\r\n    getDoctorTable: PropTypes.func.isRequired,\r\n    acctepted : PropTypes.func.isRequired,\r\n    tables : PropTypes.array.isRequired,\r\n    user : PropTypes.object.isRequired\r\n\r\n};\r\n\r\nconst mapStateToPorps = state => ({\r\n    tables : state.tables.tables,\r\n    user : state.tables.user\r\n});\r\n\r\nexport default connect(mapStateToPorps, {getDoctorTable, accepted}) (Doctor);\r\n","import React from \"react\";\r\nimport { Route, Redirect } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst PrivateRoute = ({ component: Component, auth, ...rest }) => (\r\n    <Route\r\n        {...rest}\r\n        render={props =>\r\n            auth.validToken === true ? (\r\n                <Component {...props} />\r\n            ) : (\r\n                <Redirect to=\"/login\" />\r\n            )\r\n        }\r\n    />\r\n);\r\nPrivateRoute.propTypes = {\r\n    auth: PropTypes.object.isRequired\r\n};\r\nconst mapStateToProps = state => ({\r\n    auth: state.auth\r\n});\r\nexport default connect(mapStateToProps)(PrivateRoute);\r\n","import React, { Component } from 'react';\r\nimport {connect} from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\nimport {get_all_rooms} from '../../actions/RoomsActions';\r\nimport {pushDoctor} from '../../actions/DoctorsActions';\r\nimport Header from '../Header';\r\n\r\n\r\nclass addDoctor extends Component {\r\n    constructor(){\r\n        super();\r\n        this.state = {\r\n            firstName : '',\r\n            lastName : '',\r\n            middleName : '',\r\n            price : '',\r\n            speciality : '',\r\n            username : '',\r\n            password : '',\r\n            category : '',\r\n            rooms : '',\r\n            Rooms : []\r\n        }\r\n        this.onChange = this.onChange.bind(this);\r\n        this.onSubmit = this.onSubmit.bind(this);\r\n    }\r\n    componentDidMount(){console.log(this.props.auth.token.role[0].roleName)\r\n        if (!this.props.auth.validToken && this.props.auth.token.role[0].roleName !== 'admin') {\r\n            this.props.history.push(\"/login\")\r\n        }else{\r\n             this.props.get_all_rooms();\r\n        }\r\n       \r\n    }\r\n    componentWillReceiveProps(newProps){\r\n        this.setState({\r\n                Rooms :newProps.rooms.rooms\r\n        })\r\n     }\r\n    onChange(e){\r\n        this.setState({[e.target.name]: e.target.value})\r\n    }\r\n\r\n    onSubmit(e){\r\n        e.preventDefault()\r\n          const doctor = {\r\n            firstName : this.state.firstName,\r\n            lastName : this.state.lastName,\r\n            middleName : this.state.middleName,\r\n            price : this.state.price,\r\n            speciality : this.state.speciality,\r\n            username : this.state.username,\r\n            password : this.state.password,\r\n            category : this.state.category,\r\n            rooms : this.state.rooms,\r\n        }\r\n        this.props.pushDoctor(doctor, this.props.history)\r\n    }\r\n    render() {\r\n        const {Rooms} = this.state;\r\n        return (\r\n                <>\r\n                <div style={{width:\"1440px\", margin:'0 auto'}}>\r\n                    <Header />\r\n                    <form style={{width:'100%', margin:'0 auto', marginTop:'20px' }} onSubmit={this.onSubmit}>\r\n                        <div className=\"form-group\" style={{width:'690px', marginRight:\"55px\", float:\"left\"}}>\r\n                            <label htmlFor=\"firstName\">First Name:</label>\r\n                            <input type=\"text\" className=\"form-control\" id=\"firstName\" placeholder=\"Enter First Name\" onChange={this.onChange} name=\"firstName\" required />\r\n                            <div className=\"valid-feedback\">Valid.</div>\r\n                            <div className=\"invalid-feedback\">Please fill out this field.</div>\r\n                        </div>\r\n                        <div className=\"form-group\" style={{width:'690px', float:\"left\"}}>\r\n                            <label htmlFor=\"lastName\">LastName:</label>\r\n                            <input type=\"text\" className=\"form-control\" id=\"lastName\" onChange={this.onChange} placeholder=\"Enter Last Name\" name=\"lastName\" required />\r\n                            <div className=\"valid-feedback\">Valid.</div>\r\n                            <div className=\"invalid-feedback\">Please fill out this field.</div>\r\n                        </div>\r\n                         <div className=\"form-group\" style={{width:'690px',marginRight:\"55px\", float:\"left\"}}>\r\n                            <label htmlFor=\"middleName\">Middle Name:</label>\r\n                            <input type=\"text\" className=\"form-control\" id=\"middleName\" onChange={this.onChange} placeholder=\"Enter Middle Name\" name=\"middleName\" required />\r\n                            <div className=\"valid-feedback\">Valid.</div>\r\n                            <div className=\"invalid-feedback\">Please fill out this field.</div>\r\n                        </div>\r\n                         <div className=\"form-group\" style={{width:'690px', float:\"left\"}}>\r\n                            <label htmlFor=\"price\">Price:</label>\r\n                            <input type=\"text\" className=\"form-control\" id=\"price\" onChange={this.onChange} placeholder=\"50000\" name=\"price\" required />\r\n                            <div className=\"valid-feedback\">Valid.</div>\r\n                            <div className=\"invalid-feedback\">Please fill out this field.</div>\r\n                        </div>\r\n                          <div className=\"form-group\" style={{width:'690px',marginRight:\"55px\", float:\"left\"}}>\r\n                            <label htmlFor=\"speciality\">Speciality:</label>\r\n                            <input type=\"text\" className=\"form-control\" id=\"speciality\" onChange={this.onChange} placeholder=\"lor\" name=\"speciality\" required />\r\n                            <div className=\"valid-feedback\">Valid.</div>\r\n                            <div className=\"invalid-feedback\">Please fill out this field.</div>\r\n                        </div>\r\n                         <div className=\"form-group\" style={{width:'690px', float:\"left\"}}>\r\n                            <label htmlFor=\"username\">Username:</label>\r\n                            <input type=\"text\" className=\"form-control\" id=\"username\" onChange={this.onChange} placeholder=\"username\" name=\"username\" required />\r\n                            <div className=\"valid-feedback\">Valid.</div>\r\n                            <div className=\"invalid-feedback\">Please fill out this field.</div>\r\n                        </div>\r\n                        <div className=\"form-group\" style={{width:'690px',marginRight:\"55px\", float:\"left\"}}>\r\n                            <label htmlFor=\"password\">Password:</label>\r\n                            <input type=\"password\" className=\"form-control\" id=\"password\" onChange={this.onChange} placeholder=\"password\" name=\"password\" required />\r\n                            <div className=\"valid-feedback\">Valid.</div>\r\n                            <div className=\"invalid-feedback\">Please fill out this field.</div>\r\n                        </div>\r\n                        <div className=\"form-group\" style={{width:'690px', float:\"left\"}}>\r\n                           <label htmlFor='rooms'>Choose a rooms: </label>\r\n                            <input list=\"room\" name=\"rooms\" id=\"rooms\" onChange={this.onChange} />\r\n                            <datalist name=\"rooms\" id=\"room\" style={{padding:'5px', borderRadius:'10px', marginLeft:'10px', outline:'none'}} >\r\n                                {Rooms.map(room =>{\r\n                                   return(\r\n                                         <option value={room.floor} key={room.id}>{room.floor} qavat {room.number} xona</option>\r\n                                   )\r\n                                })}\r\n                               \r\n                            </datalist>\r\n                        </div>\r\n                        <div className=\"form-group\" style={{width:'690px', float:\"left\"}}> \r\n                            <label htmlFor='category'>Choose a category: </label>\r\n                            <input list=\"categorys\" name=\"category\" id=\"category\" onChange={this.onChange} />\r\n                            <datalist id='categorys' style={{padding:'5px', borderRadius:'10px', marginLeft:'10px', outline:'none'}} >\r\n                                <option value='A'/>\r\n                                <option value='B'/>\r\n                                <option value='C'/>\r\n                                <option value='D'/>\r\n                            </datalist>\r\n                        </div>\r\n                        <button type=\"submit\"  className=\"btn btn-primary\">Submit</button>\r\n                    </form>\r\n                    </div>\r\n                </>\r\n            )\r\n        }\r\n    \r\n};\r\n\r\naddDoctor.propTypes ={\r\n    get_all_rooms : PropTypes.func.isRequired,\r\n    pushDoctor : PropTypes.func.isRequired,\r\n    rooms : PropTypes.object.isRequired,\r\n    auth : PropTypes.object.isRequired\r\n}\r\n\r\nconst mapStateToPorps = state => ({\r\n    rooms : state.rooms,\r\n    auth : state.auth\r\n})\r\nexport default connect(mapStateToPorps, {get_all_rooms, pushDoctor}) (addDoctor);\r\n","import axios from 'axios';\r\nimport {GET_ALL_ROOMS} from './Types';\r\n\r\nexport const get_all_rooms = () => async dispatch =>{\r\n    \r\n    const rooms = await axios.get(\"/api/room\")\r\n    dispatch({\r\n        type:GET_ALL_ROOMS,\r\n        payload : rooms.data.body\r\n    });\r\n};","import React, { Component } from 'react';\nimport {BrowserRouter, Route, Switch} from 'react-router-dom';\nimport { Provider} from 'react-redux';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport store from './store';\nimport Home from './component/Home';\nimport NotFound from './component/exceptions/NotFound';\nimport ListRegister from './component/ListRegister';\nimport Login from './component/authtication/Login';\nimport Admin from './component/admin/Queue';\nimport jwt_decode from 'jwt-decode';\nimport Doctor from './component/doctor/Doctor';\nimport setJWToken from './utils/setJWToken';\nimport {GET_TOKEN} from './actions/Types';\nimport PrivateRoute from './component/common/PrivateRoute';\nimport addDoctor from './component/admin/addDoctor';\n\n\nconst token = localStorage.jwtToken;\nif (token) {\n    setJWToken(token);\n    const decoded = jwt_decode(token)\n    store.dispatch({\n        type: GET_TOKEN,\n        payload: decoded\n    })\n\n   \n}\n\n\nclass App extends Component {\n  render(){\n    return (\n      <Provider store={store}>\n        <BrowserRouter>\n          <div className=\"App\"> \n              <Route exact path=\"/\" component={Home}/>\n              <Route exact path='/listRegister/:id' component={ListRegister} />\n              <Route exact path='/login' component={Login} />\n              <Route exact path='/addDoctor' component={addDoctor} />\n          </div> \n          <Switch>\n            <PrivateRoute exact path=\"/admin\" component={Admin} />\n          </Switch>\n          <Switch>\n            <PrivateRoute exact path=\"/doctor\" component={Doctor} />\n          </Switch>\n              <Route exact path=\"/\"  component={NotFound} />\n        </BrowserRouter>\n      </Provider>\n    );\n  }\n};\n\nexport default  (App);\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport axios from 'axios';\naxios.defaults.baseURL = \"http://localhost:8080/\"\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n"],"sourceRoot":""}