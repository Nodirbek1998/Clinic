{"version":3,"sources":["actions/Types.js","reducers/doctorReducer.js","reducers/errorReducer.js","reducers/PatientReducer.js","reducers/Authreducer.js","reducers/Table.js","reducers/index.js","store.js","actions/DoctorsActions.js","component/Footer.js","component/Card.js","component/Header.js","component/Home.js","component/exceptions/Wrong.js","component/exceptions/NotFound.js","component/Personal.js","actions/PatientActions.js","component/ListRegister.js","utils/setJWToken.js","actions/AuthAction.js","component/authtication/Login.js","component/Navbar.js","component/admin/Queue.js","actions/QueueActions.js","component/doctor/Doctor.js","component/common/PrivateRoute.js","App.js","index.js"],"names":["GET_ERRORS","GET_DOCTORS","GET_DOCTOR","GET_PATIENT_SAVE","GET_QUEUE","GET_TOKEN","GET_DOCTOR_TABLE","GET_QUEUE_TABLE","initialState","doctors","doctor","errors","patient","queue","token","validToken","tables","user","combineReducers","state","action","type","payload","auth","middleware","thunk","ReactReduxDevTools","window","__REDUX_DEVTOOLS_EXTENSION__","store","navigator","userAgent","includes","createStore","rootReducers","compose","applyMiddleware","getDoctorTable","dispatch","a","axios","get","res","console","log","data","body","error","Footer","className","Card","this","props","src","alt","speciality","firstName","lastName","to","id","Component","Header","Home","getAllDoctors","filter","roles","roleName","map","connect","Wrong","NotFound","Personal","phone","onChange","bind","onSubmit","e","setState","target","name","value","preventDefault","newPatient","doctorId","addPatient","history","size","length","middleName","data-toggle","data-target","que","index","style","width","display","price","data-dismiss","onClick","placeholder","post","push","ListRegister","match","params","getDoctor","getQueue","setJWToken","defaults","headers","common","setCurrentUser","decode","Login","username","password","login","getToken","localStorage","setItem","jwt_decode","role","Navbar","logout","location","href","signInChecking","removeItem","Queue","getAllQueue","newProps","tableBody","row","fontWeight","verticalAlign","margin","class","borderRadius","borderTop","Doctor","accepted","tartib","height","color","fontSize","padding","component","rest","render","jwtToken","decoded","App","exact","path","Admin","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.58607026.chunk.js","sourcesContent":["export const GET_ERRORS = \"GET_ERRORS\";\r\nexport const GET_DOCTORS = \"GET_DOCTORS\";\r\nexport const GET_DOCTOR = \"GET_DOCTOR\";\r\nexport const GET_PATIENT_SAVE = \"GET_PATIENT_SAVE\";\r\nexport const GET_QUEUE = \"GET_QUEUE\";\r\nexport const GET_TOKEN = \"GET_TOKEN\";\r\nexport const GET_DOCTOR_TABLE = \"GET_DOCTOR_TABLE\";\r\nexport const GET_QUEUE_TABLE = \"GET_QUEUE_TABLE\";\r\nexport const GET_EDIT_QUEUE = \"GET_EDIT_QUEUE\";\r\n\r\n","import {GET_DOCTORS, GET_DOCTOR} from '../actions/Types';\r\n\r\nconst initialState = {\r\n    doctors : [],\r\n    doctor : {}\r\n}\r\n\r\nexport default function foo(state = initialState, action){\r\n    switch(action.type){\r\n        case GET_DOCTORS :\r\n            return{\r\n                ...state,\r\n                doctors : action.payload\r\n            };\r\n        case GET_DOCTOR :\r\n            return {\r\n                ...state,\r\n                doctor : action.payload\r\n            };\r\n        default : \r\n        return state;\r\n    }\r\n}","import {GET_ERRORS} from '../actions/Types';\r\n\r\nconst initialState = {\r\n    errors : {}\r\n}\r\n\r\nexport default function foo(state = initialState, action) {\r\n    switch(action.type){\r\n        case GET_ERRORS :\r\n            return {\r\n                ...state,\r\n                errors : action.payload\r\n            };\r\n        default :\r\n         return state;\r\n    }\r\n    \r\n}","import { GET_PATIENT_SAVE, GET_QUEUE} from '../actions/Types';\r\n\r\nconst initialState = {\r\n    patient : {},\r\n    queue : []\r\n}\r\n\r\nexport default function foo(state = initialState, action) {\r\n    switch(action.type){\r\n        case GET_PATIENT_SAVE :\r\n            return {\r\n                ...state,\r\n                patient : action.payload\r\n            };\r\n        case GET_QUEUE :\r\n            return {\r\n                ...state,\r\n                queue : action.payload\r\n            }\r\n        default : \r\n            return state;\r\n    }\r\n}","import {GET_TOKEN} from '../actions/Types';\r\n\r\nconst initialState = {\r\n    token : [],\r\n    validToken : false\r\n}\r\nexport default function foo(state = initialState, action) {\r\n    switch(action.type){\r\n        case GET_TOKEN :\r\n            return {\r\n                ...state,\r\n                token : action.payload,\r\n                validToken : action.payload?true:false\r\n            };\r\n        default :\r\n            return state;\r\n    }\r\n    \r\n}\r\n","import {GET_DOCTOR_TABLE, GET_QUEUE_TABLE} from '../actions/Types';\r\n\r\nconst initialState = {\r\n    tables : [],\r\n    user : {}\r\n}\r\n\r\nexport default function foo(state = initialState, action) {\r\n    \r\n    switch(action.type){\r\n        \r\n        case GET_DOCTOR_TABLE : \r\n            return{\r\n                ...state,\r\n                tables : action.payload.tables,\r\n                user : action.payload.user\r\n            };\r\n        case GET_QUEUE_TABLE : \r\n            return{\r\n                ...state,\r\n                tables : action.payload\r\n            };\r\n        default : \r\n            return state;\r\n    }\r\n    \r\n}","import {combineReducers} from 'redux';\r\nimport doctorReducers from './doctorReducer';\r\nimport errorReducer from './errorReducer';\r\nimport PatientReducer from './PatientReducer';\r\nimport AuthReducer from './Authreducer'; \r\nimport Table from './Table';\r\n\r\nexport default combineReducers({\r\n    doctors: doctorReducers,\r\n    patient : PatientReducer,\r\n    errors : errorReducer,\r\n    auth: AuthReducer,\r\n    tables : Table\r\n});","import {createStore, applyMiddleware, compose} from 'redux';\r\nimport thunk  from 'redux-thunk';\r\nimport rootReducers from './reducers';\r\n\r\nconst initialState = {};\r\nconst middleware = [thunk];\r\n\r\nconst ReactReduxDevTools = window.__REDUX_DEVTOOLS_EXTENSION__ &&\r\n  window.__REDUX_DEVTOOLS_EXTENSION__()\r\nlet store;\r\n\r\n if(window.navigator.userAgent.includes(\"Chrome\") && ReactReduxDevTools){\r\n   store = createStore(\r\n      rootReducers,\r\n      initialState,\r\n      compose(applyMiddleware(...middleware), ReactReduxDevTools)\r\n    );\r\n}else{\r\n  store = createStore(\r\n    rootReducers,\r\n    initialState,\r\n    compose(applyMiddleware(...middleware))\r\n  )\r\n}\r\n\r\nexport default store;","import axios from 'axios';\r\nimport {GET_DOCTORS, GET_DOCTOR, GET_DOCTOR_TABLE, GET_ERRORS} from './Types';\r\n\r\nexport const getAllDoctors = () => async dispatch =>{\r\n     const res = await axios.get(\"https://clinic-react-spring.herokuapp.com/api/user\")\r\n        dispatch({\r\n            type:GET_DOCTORS,\r\n            payload:res.data.body\r\n        })\r\n};\r\nexport const getDoctor = (id) => async dispatch =>{\r\n     const res = await axios.get(`https://clinic-react-spring.herokuapp.com/api/user/${id}`)\r\n        dispatch({\r\n            type:GET_DOCTOR,\r\n            payload:res.data.body\r\n        });\r\n};\r\nexport const getDoctorTable = () => async dispatch => {\r\n    \r\n    const res = await axios.get(`https://clinic-react-spring.herokuapp.com/api/doctor`)\r\n    console.log(res);\r\n    try {\r\n        dispatch({\r\n            type : GET_DOCTOR_TABLE,\r\n            payload : res.data.body\r\n        })\r\n    } catch (error) {\r\n         dispatch({\r\n            type : GET_ERRORS,\r\n            payload : error.data\r\n        })\r\n    }\r\n};\r\n\r\nexport const accepted = (id) => async dispatch =>{\r\n    await axios.get(`https://clinic-react-spring.herokuapp.com/api/doctor/${id}`)\r\n    dispatch(getDoctorTable());\r\n}","import React from 'react'\r\n\r\nexport default function Footer() {\r\n  return (\r\n        <div className='footer'>\r\n            <div className='container'>\r\n                    <div className='education'>\r\n                        <div className='clinic'>Clinic_Name</div>\r\n                        <div className='footer-ul'>\r\n                            <ul>\r\n                                <li className=\"avtive\">About us</li>\r\n                                <li>Doctors</li>\r\n                                <li>Payment</li>\r\n                                <li>wffhrieuf</li>\r\n                            </ul>\r\n                            <ul>\r\n                                <li className=\"avtive\">About us</li>\r\n                                <li>Doctors</li>\r\n                                <li>Payment</li>\r\n                                <li>wffhrieuf</li>\r\n                            </ul>\r\n                            <ul>\r\n                            <li className=\"avtive\">About us</li>\r\n                            <li>Doctors</li>\r\n                            <li>Payment</li>\r\n                            <li>wffhrieuf</li>\r\n                        </ul>\r\n                        </div>          \r\n                    </div>\r\n            </div>\r\n            <div className='reserve'>All service reserved || 2021-2021</div>\r\n        </div>\r\n  )\r\n}\r\n","import React, { Component } from 'react';\r\nimport {Link} from 'react-router-dom';\r\n\r\n\r\nclass Card extends Component {\r\n    render() {\r\n        const {doctor} = this.props;\r\n        return (\r\n            <div className='card'>\r\n                    <img className='card-img-top' src='/images/3.jpg' alt='rasm topilmadi'/>\r\n                    <div className='card-body'>\r\n                            <p className='job'>{doctor.speciality}</p> \r\n                            <p className='card-title'>{doctor.firstName} {doctor.lastName}</p>\r\n                            <Link to={`/listRegister/${doctor.id}`}\r\n                            className='btn btn-primary'>Qabulga yozilish</Link>\r\n                    </div>\r\n                </div>\r\n        )\r\n    }\r\n};\r\n\r\n\r\n\r\nexport default (Card);\r\n\r\n\r\n\r\n","import React, { Component } from 'react'\r\nimport { Link } from 'react-router-dom'\r\n\r\nclass Header extends Component {\r\n    render() {\r\n        return (\r\n            <nav className= \"navbar navbar-dark\">\r\n                <Link className=\"navbar-brand\" to=\"/\">Name</Link>\r\n                <ul className =\"navbar-nav\">\r\n                    <li className=\"nav-item first\"><Link className='nav-link' to='#'><i className='fa fa-phone'></i>9387458324</Link></li>\r\n                    <li className=\"nav-item\"><Link className='nav-link' to='#'><i className='fa fa-phone'></i>1003</Link></li>\r\n                    <li className=\"nav-item\"><Link className='nav-link' to='#'>Rus</Link></li>\r\n                    <li className=\"nav-item\"><Link className='nav-link' to='#'>Uzb</Link></li>\r\n                    <li className=\"nav-item\"><Link className='nav-link' to='/login'>Login</Link></li>\r\n                </ul>\r\n            </nav>\r\n        )\r\n    }\r\n}\r\nexport default Header;","import React, { Component } from 'react';\r\nimport {connect} from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\nimport {getAllDoctors} from '../actions/DoctorsActions';\r\nimport Footer from './Footer';\r\nimport Card from './Card';\r\nimport '../Home.css';\r\nimport Header from './Header';\r\n\r\n\r\n class Home extends Component {\r\n     componentDidMount(){\r\n         this.props.getAllDoctors();\r\n     }\r\n    render() {\r\n        const {doctors} = this.props.doctors;\r\n        return (\r\n             <div className='container-fuild'>\r\n            <div className='container'>\r\n                <Header />\r\n                <div className='header'>\r\n                  <div className='lorem'>\r\n                      <h1>Lorem Ipsum</h1>\r\n                      <p>Lorem ipsum is simvefsoivov ornibnu nirunb nirutun unrtub \r\n                          eoubviru nrtuparghru rtubirtoj rt rpotjhtr jortjhoitbj erthbu\r\n                          tijriubhiu retpu jrotjoitrj rotiohegorij rotigjoergjpo jrotjo\r\n                      </p>\r\n                  </div>\r\n                  \r\n                  <div className=\"cards\" >\r\n                   {doctors.filter(doctor => doctor.roles[0].roleName !== 'admin').map((doctor) => {\r\n                     return(\r\n                        <Card doctor={doctor} key={doctor.id} />\r\n                     );   \r\n                                    \r\n                   })}\r\n                </div>\r\n               \r\n                </div>           \r\n            </div>\r\n            <Footer/>\r\n          </div>\r\n        )\r\n    }\r\n};\r\n\r\nHome.propTypes = {\r\n    getAllDoctors : PropTypes.func.isRequired,\r\n    doctors : PropTypes.object.isRequired\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n    doctors: state.doctors\r\n})\r\n\r\nexport default connect(mapStateToProps, {getAllDoctors}) (Home);\r\n","import React, {Component} from 'react';\r\n\r\nclass Wrong extends Component {\r\n    render() {\r\n        return (\r\n            <div>\r\n                <h1 className={\"event-danger text-center\"}>Something is wrong!!</h1>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Wrong;","import React, {Component} from 'react';\r\n\r\nclass NotFound extends Component {\r\n    render() {\r\n        return (\r\n            <div>\r\n                Not Found\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default NotFound;","import React, { Component } from 'react';\r\nimport {Link} from 'react-router-dom';\r\nimport {connect} from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\nimport {addPatient} from '../actions/PatientActions';\r\n\r\n\r\nclass Personal extends Component {\r\n    constructor(){\r\n        super();\r\n        this.state = {\r\n            firstName : '',\r\n            lastName : '',\r\n            phone : ''\r\n           \r\n        }\r\n        this.onChange = this.onChange.bind(this);\r\n        this.onSubmit = this.onSubmit.bind(this);\r\n    };\r\n   \r\n\r\n    onChange(e){\r\n        this.setState({[e.target.name]: e.target.value})\r\n    }\r\n\r\n    onSubmit(e){\r\n      e.preventDefault()\r\n      const newPatient = {\r\n          firstName : this.state.firstName,\r\n          lastName : this.state.lastName,\r\n          phone : this.state.phone,\r\n          doctorId : this.props.data.id\r\n      }\r\n      this.props.addPatient(newPatient, this.props.history)\r\n    }\r\n   \r\n    render() {\r\n       const {queue} = this.props.patient;\r\n       const size  = queue.length;\r\n       \r\n        return (\r\n          <div className='list'>\r\n            <p>Toshkent viloyat xususiy klinika stomotologi</p>\r\n            <div className='row'>\r\n                <div className='col-md-4'>\r\n                    <img className='img' src='/images/sullivan.jpg' alt='rasm topilmadi'/>\r\n                </div>\r\n                <div className='col-md-8'>\r\n                    <p className='fullName'>{this.props.data.firstName} {this.props.data.lastName} {this.props.data.middleName}</p>    \r\n                </div>       \r\n            </div>\r\n            <div className='row'>\r\n                <div className='col'>\r\n                    <p className='job'><b>Mutaxasisligi:</b>{this.props.data.speciality}</p>\r\n                    <p className='job'><b>O'quv yo'nalishi</b> {this.props.data.speciality}</p>\r\n                    <p className='job'><b>O'quv yo'nalishi</b> {this.props.data.speciality}</p>\r\n                </div>\r\n                <div className='col'>\r\n                    <Link to='/' className='btn btn-success' >Boshqa bo'lim tanlash</Link>\r\n                </div>\r\n            </div>\r\n            <div className='row'>\r\n                <div className='col-md-12'>\r\n                     <button type=\"button\"  className=\"btn btn-primary\" data-toggle=\"modal\"  data-target=\"#myModal\" >Ro'yhatga yozilish</button>\r\n                </div>\r\n            </div> \r\n           \r\n            <div className='row'>\r\n               {queue.map((que, index) => {\r\n                    return(\r\n                        <div className='col-md-4 mb-4' key={que.id}>\r\n                          <p className='btn-green index' >{index + 1}){que.id}</p>\r\n                        </div>\r\n                    )\r\n               })}\r\n            </div> \r\n                <div className=\"modal\" id=\"submit\">\r\n                    <div className=\"modal-dialog\">\r\n                        <div className=\"modal-content\">    \r\n                            <div className=\"modal-body\">\r\n                                <form className=\"needs-validation\" >\r\n                                    <p><div style={{width:\"200px\", display:\"inline-block\"}}>Ism:</div> <strong>{this.state.firstName}</strong> </p>\r\n                                    <p><div style={{width:\"200px\", display:\"inline-block\"}}>Familiya:</div> <strong>{this.state.lastName}</strong> </p>\r\n                                    <p><div style={{width:\"200px\", display:\"inline-block\"}}>Tel-raqam:</div> <strong>{this.state.phone}</strong> </p>\r\n                                    <p><div style={{width:\"200px\", display:\"inline-block\"}}>Price:</div> <strong>{this.props.data.price}</strong> </p>\r\n                                    <p><div style={{width:\"200px\", display:\"inline-block\"}}>navbat:</div> <strong>{size+1}</strong> </p>\r\n                                     <p><div style={{width:\"200px\", display:\"inline-block\"}}>Id-raqam:</div> <strong>{this.props.data.id}</strong> </p>\r\n                                    <div className='col-md-12'>\r\n                                        <button type=\"button\" className=\"btn btn-primary\" data-toggle=\"modal\"  data-dismiss=\"modal\" \r\n                                        onClick={this.onSubmit} >Tasdiqlash</button>\r\n                                    </div>\r\n                                </form>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"modal\" id=\"myModal\">\r\n                    <div className=\"modal-dialog\">\r\n                        <div className=\"modal-content\">    \r\n                            <div className=\"modal-body\">\r\n                                <form className=\"needs-validation\" >\r\n                                    <div className=\"form-group\">\r\n                                        <label>First Name:</label>\r\n                                        <input type=\"text\" className=\"form-control\" id=\"uname\" placeholder=\"Enter firstName\" \r\n                                        name=\"firstName\"  onChange={this.onChange}/>\r\n                                        <div className=\"valid-feedback\">Valid.</div>\r\n                                        <div className=\"invalid-feedback\">Please fill out this field.</div>\r\n                                    </div>\r\n                                    <div className=\"form-group\">\r\n                                        <label>Last Name:</label>\r\n                                        <input type=\"text\" className=\"form-control\" id=\"pwd\" placeholder=\"Enter lastName\"\r\n                                        name=\"lastName\"  onChange={this.onChange}/>\r\n                                        <div className=\"valid-feedback\">Valid.</div>\r\n                                        <div className=\"invalid-feedback\">Please fill out this field.</div>\r\n                                    </div>\r\n                                    <div className=\"form-group\">\r\n                                        <label >Phone number:</label>\r\n                                        <input type=\"text\" className=\"form-control\" id=\"phone\" placeholder=\"+998936667205\"\r\n                                        name=\"phone\"  onChange={this.onChange}/>\r\n                                        <div className=\"valid-feedback\">Valid.</div>\r\n                                        <div className=\"invalid-feedback\">Please fill out this field.</div>\r\n                                    </div>\r\n                                    <div className='col-md-12'>\r\n                                        <button type=\"button\" className=\"btn btn-primary\" data-toggle=\"modal\" data-target=\"#submit\"  data-dismiss=\"modal\" >Ro'yhatga yozilish</button>\r\n                                    </div>\r\n                                </form>\r\n                            </div>\r\n                            <div className=\"modal-footer\">\r\n                                <button type=\"button\" className=\"btn btn-danger\" data-dismiss=\"modal\">Close</button>\r\n                            </div>\r\n                    </div>\r\n                </div>\r\n              \r\n            </div> \r\n        </div>\r\n        \r\n        )\r\n    }\r\n};\r\n\r\nPersonal.propTypes={\r\n    addPatient : PropTypes.func.isRequired,\r\n    patient : PropTypes.object.isRequired,\r\n    errors : PropTypes.object.isRequired\r\n};\r\n\r\nconst mapStateToPorps = state => ({\r\n    patient : state.patient,\r\n    errors : state.errors\r\n});\r\n\r\nexport default connect(mapStateToPorps, {addPatient}) (Personal);\r\n","import axios from 'axios';\r\nimport {GET_ERRORS, GET_PATIENT_SAVE, GET_QUEUE} from './Types';\r\n\r\n\r\nexport const addPatient = (newPatient, history) => async dispatch =>{\r\n\r\n    const res = await axios.post(\"https://clinic-react-spring.herokuapp.com/api/patient\", newPatient)\r\n       try {\r\n            dispatch({\r\n            type:GET_PATIENT_SAVE,\r\n            payload : res.data.body\r\n        }); \r\n        await history.push(`/listRegister/${newPatient.doctorId}`);\r\n        console.log(`/listRegister/${newPatient.doctorId}`);\r\n       } catch (error) {\r\n           dispatch({\r\n            type:GET_ERRORS,\r\n            payload : error.data\r\n          })\r\n       }; \r\n          \r\n};\r\n\r\nexport const getQueue = (id) => async dispatch =>{\r\n    const res = await axios.get(`https://clinic-react-spring.herokuapp.com/api/queue/${id}`)\r\n    dispatch({\r\n        type: GET_QUEUE,\r\n        payload : res.data.body\r\n    })\r\n};","import React, { Component } from 'react';\r\nimport Personal from './Personal';\r\nimport Footer from './Footer'\r\nimport {connect} from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\nimport {getDoctor} from '../actions/DoctorsActions';\r\nimport {getQueue} from '../actions/PatientActions';\r\nimport Header from './Header';\r\n\r\nclass ListRegister extends Component {\r\n    componentDidMount(){\r\n        const {id} = this.props.match.params;\r\n        this.props.getDoctor(id);\r\n        this.props.getQueue(id);\r\n    }\r\n    render() {\r\n        const {queue, doctor} = this.props;\r\n        return (\r\n           <div className='container-fuild bg'>\r\n                 <Header />\r\n               <div className='container'>\r\n                    <Personal data={doctor} queue={queue}/>\r\n                    \r\n               </div>\r\n               <Footer/>\r\n            </div>\r\n        )\r\n    }\r\n};\r\n\r\nListRegister.propTypes = {\r\n    getDoctor: PropTypes.func.isRequired,\r\n    doctor : PropTypes.object.isRequired,\r\n    getQueue: PropTypes.func.isRequired,\r\n    queue : PropTypes.object.isRequired\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    doctor : state.doctors.doctor,\r\n    queue : state.patient.queue\r\n})\r\n\r\nexport default connect(mapStateToProps, {getDoctor,getQueue}) (ListRegister);\r\n","import axios from 'axios';\r\n\r\nconst setJWToken = token => {\r\n    if (token) {\r\n        // Apply to every request\r\n        axios.defaults.headers.common['Authorization'] = token;\r\n    } \r\n};\r\nexport default setJWToken;","import axios from 'axios';\r\nimport { GET_ERRORS, GET_TOKEN} from '../actions/Types';\r\nimport jwt_decode from 'jwt-decode';\r\nimport setJWToken from '../utils/setJWToken';\r\n\r\nexport const getToken = (login, history) => async dispatch => { \r\n    const res = await axios.post(\"https://clinic-react-spring.herokuapp.com/api/auth/login\", login)\r\n       const token = res.data.body;\r\n        localStorage.setItem(\"jwtToken\", token);\r\n        setJWToken(token);\r\n        const decode = jwt_decode(token);\r\n        try {\r\n            dispatch(setCurrentUser(decode));\r\n            switch(decode.role[0].roleName){\r\n                case 'doctor':\r\n                     history.push(\"/doctor\");\r\n                     break;\r\n                case 'admin':\r\n                     history.push(\"/admin\"); break;\r\n                default : \r\n                     history.push(\"/\");\r\n            }\r\n            \r\n        } catch (error) {\r\n            dispatch({\r\n                type : GET_ERRORS,\r\n                payload : error.data\r\n        }); history.push(\"/login\");\r\n        }\r\n};\r\nexport const setCurrentUser = decode => {\r\n    return {\r\n        type: GET_TOKEN,\r\n        payload: decode\r\n    };\r\n};\r\n\r\nexport const logout = () => dispatch => {\r\n    // Remove token from localStorage\r\n    localStorage.removeItem(\"jwtToken\");\r\n    // Remove auth header from future request\r\n    setJWToken(false);\r\n    // Set current user to {} which will set isAuthenticated to false\r\n    dispatch(setCurrentUser({}));\r\n};","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport {connect} from 'react-redux';\r\nimport {getToken} from '../../actions/AuthAction';\r\nclass Login extends Component {\r\n    constructor(){\r\n        super();\r\n        this.state={\r\n            username: '',\r\n            password:''\r\n        }\r\n        this.onChange = this.onChange.bind(this);\r\n        this.onSubmit = this.onSubmit.bind(this);\r\n    }\r\n\r\n\r\n\r\n    onChange(e){\r\n        this.setState({[e.target.name]: e.target.value})\r\n    }\r\n    onSubmit(e){\r\n        e.preventDefault()\r\n        const login = {\r\n            username : this.state.username,\r\n            password : this.state.password\r\n        }\r\n        this.props.getToken(login, this.props.history);\r\n    }\r\n    render() {\r\n        \r\n        return (\r\n            <div className=\"container m-5\">\r\n                <h1 className=\"text-center\">Login</h1>\r\n                <div className=\"mt-5\" style={{width:\"400px\"}}>\r\n                    <form className=\"needs-validation\" onSubmit={this.onSubmit} >\r\n                        <div className=\"form-group\">\r\n                            <label>Username:</label>\r\n                            <input type=\"text\" className=\"form-control\" id=\"uname\" placeholder=\"Enter username\" \r\n                            name=\"username\"  onChange={this.onChange}/>\r\n                            <div className=\"valid-feedback\">Valid.</div>\r\n                            <div className=\"invalid-feedback\">Please fill out this field.</div>\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <label>Password:</label>\r\n                            <input type=\"password\" className=\"form-control\" id=\"pwd\" placeholder=\"Enter password\"\r\n                            name=\"password\"  onChange={this.onChange}/>\r\n                            <div className=\"valid-feedback\">Valid.</div>\r\n                            <div className=\"invalid-feedback\">Please fill out this field.</div>\r\n                        </div>\r\n                        <div className='col-md-12'>\r\n                            <button type=\"submit\"  className=\"btn btn-primary\"  >Login</button>\r\n                        </div>\r\n                    </form>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n};\r\n\r\nLogin.propTypes = {\r\n    getToken:PropTypes.func.isRequired,\r\n    errors : PropTypes.object.isRequired\r\n\r\n}\r\n\r\nconst mapStateToPorps = (state) =>({\r\n    errors: state.errors\r\n})\r\n\r\nexport default connect(mapStateToPorps, {getToken}) (Login);\r\n","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport {Link} from 'react-router-dom';\r\nimport PropTypes from 'prop-types';\r\nimport {logout} from '../actions/AuthAction';\r\n\r\n\r\n\r\nclass  Navbar extends Component{\r\n\r\n \r\n\r\n    logout = () => {\r\n            this.props.logout();\r\n            window.location.href = \"/\"\r\n    };\r\n\r\n    \r\n    signUpChecking (auth){\r\n\r\n        const {token, validToken} = auth\r\n\r\n        if (validToken) {\r\n            if (token.role[0].roleName===\"doctor\") { \r\n                return (<Link className=\"nav-link\" to={`/doctor`}>\r\n                        <i className=\"fas fa-user-circle mr-1\"></i>\r\n                        My books\r\n                    </Link>\r\n                )\r\n            }\r\n            else{\r\n                return <Link className=\"nav-link text-white\" to=\"/admin\">Rental management</Link>\r\n            }\r\n\r\n        } else {\r\n            return (<Link className=\"nav-link text-white\" to=\"/login\">\r\n                Sign Up\r\n            </Link>)\r\n        }\r\n    }\r\n\r\n    signInChecking(auth){\r\n\r\n        if (auth.validToken) {\r\n            return (\r\n                <Link className=\"nav-link bg-red text-white\" onClick={this.logout} to=\"logout\">\r\n                    Logout\r\n                </Link>\r\n            )\r\n        }\r\n\r\n        return (\r\n            <Link className=\"nav-link text-white\" to=\"/login\">\r\n                Login\r\n            </Link>\r\n        )\r\n    }\r\n\r\n\r\n\r\n  render(){\r\n\r\n    return (\r\n    <nav className=\" navbar bg-info\">\r\n        <Link className=\"navbar-brand text-white\" to=\"/\">Name</Link>\r\n        <ul className =\"navbar-nav\">\r\n            <li className=\"nav-item first\"><Link className='nav-link text-white' to='#'><i className='fa fa-phone'></i>9387458324</Link></li>\r\n            <li className=\"nav-item\"><Link className='nav-link text-white' to='#'><i className='fa fa-phone'></i>1003</Link></li>\r\n            <li className=\"nav-item\"><Link className='nav-link text-white' to='#'>Rus</Link></li>\r\n            <li className=\"nav-item\"><Link className='nav-link text-white' to='#'>Uzb</Link></li>\r\n            \r\n            <li className=\"nav-item\">\r\n                {this.signInChecking(this.props.auth)}\r\n            </li>\r\n        </ul>\r\n    </nav>\r\n  )\r\n  }\r\n};\r\n\r\nNavbar.propTypes = {\r\n  auth: PropTypes.object.isRequired\r\n}\r\n\r\nconst mapStateToPorps = state => ({\r\n    auth : state.auth\r\n});\r\n\r\nexport default connect(mapStateToPorps,{logout}) (Navbar);\r\n","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport {connect} from 'react-redux';\r\nimport {getAllQueue} from '../../actions/QueueActions';\r\nimport Navbar from '../Navbar';\r\n\r\n\r\n\r\n class Queue extends Component {\r\n     constructor(){\r\n         super()\r\n         this.state ={\r\n             tables : []\r\n         }\r\n     }\r\n     \r\n     componentDidMount(){\r\n         this.props.getAllQueue(\"A\");     \r\n     }\r\n    \r\n     componentWillReceiveProps(newProps){\r\n        this.setState({\r\n                tables :newProps.tables\r\n        })\r\n     }\r\n     onClick(type){\r\n         this.props.getAllQueue(type);\r\n         this.setState({\r\n             tables:this.props.tables\r\n         })\r\n        \r\n     }\r\n    render() { \r\n            const {tables} = this.state;\r\n            let tableBody ;\r\n            console.log(tables);\r\n          if(tables.length > 0){\r\n              tableBody = tables.map(row =>{\r\n                               return(\r\n                                   <tr key={row.id} className=\"text-center\">\r\n                                      <td>{row.name}</td>\r\n                                      <td>{row.id}</td>\r\n                                      <td>{row.patient.firstName}</td>\r\n                                      <td>{row.patient.lastName}</td>\r\n                                      <td>{row.patient.phone}</td>\r\n                                      <td><button className=\"btn btn-primary\" style={{width:'100px',fontWeight:'bold',verticalAlign:\"center\"}}>ok</button></td>\r\n                                      <td><button className=\"btn btn-danger\" style={{width:'100px',fontWeight:'bold',verticalAlign:\"center\"}}>delete</button></td>\r\n                                   </tr>\r\n                               )\r\n                           })\r\n                        console.log(this.state);\r\n                        }else{\r\n                            tableBody = \"loading...\"\r\n                        }\r\n        return (\r\n            <>\r\n                <div  style={{width:'1400px', margin:'0 auto'}}>\r\n                    <Navbar />\r\n                        <div className=\"btn-group \">\r\n                            <button type=\"button\" class=\"btn btn-light border pr-5 pl-5 mr-2\" style={{borderRadius:'10px', fontWeight:'bold'}}onClick={()=>this.onClick(\"A\")}>A</button>\r\n                            <button type=\"button\" class=\"btn btn-light border pr-5 pl-5 mr-2\" style={{borderRadius:'10px', fontWeight:'bold'}}onClick={()=>this.onClick(\"B\")}>B</button>\r\n                            <button type=\"button\" class=\"btn btn-light border pr-5 pl-5 mr-2\" style={{borderRadius:'10px', fontWeight:'bold'}}onClick={()=>this.onClick(\"C\")}>C</button>\r\n                            <button type=\"button\" class=\"btn btn-light border pr-5 pl-5 mr-2\" style={{borderRadius:'10px', fontWeight:'bold'}}onClick={()=>this.onClick(\"D\")}>D</button>\r\n                            <button type=\"button\" class=\"btn btn-light border pr-5 pl-5 mr-2\" style={{borderRadius:'10px', fontWeight:'bold'}}onClick={()=>this.onClick(\"E\")}>E</button>\r\n                            <button type=\"button\" class=\"btn btn-light border pr-5 pl-5 mr-2\" style={{borderRadius:'10px', fontWeight:'bold'}}onClick={()=>this.onClick(\"F\")}>F</button>\r\n                        </div>\r\n                    <table className=\"table table-sm border-bottom\" style={{borderTop:'none'}}>\r\n                        <thead>\r\n                        <tr className=\"text-center\">\r\n                            <th className=\"pt-2 pb-2\">Navbat_r</th>\r\n                            <th className=\"pt-2 pb-2\">#Id raqam</th>\r\n                            <th className=\"pt-2 pb-2\">Bemor_ismi</th>\r\n                            <th className=\"pt-2 pb-2\">Bemor_Fam</th>\r\n                            <th className=\"pt-2 pb-2\">Bemor_tel</th>\r\n                            <th className=\"pt-2 pb-2\"></th>\r\n                            <th className=\"pt-2 pb-2\"></th>\r\n                        </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                          {tableBody}\r\n                        </tbody>\r\n                    </table>\r\n                </div>\r\n            </>\r\n        )\r\n    }\r\n};\r\n\r\nQueue.propTypes = {\r\n    getAllQueue : PropTypes.func.isRequired,\r\n    tables : PropTypes.object.isRequired\r\n}\r\n\r\nconst mapStateToPorps = state => ({\r\n    tables : state.tables.tables\r\n})\r\n\r\n\r\nexport default connect(mapStateToPorps, {getAllQueue})  (Queue);\r\n","import {GET_ERRORS, GET_QUEUE_TABLE} from './Types';\r\nimport axios from 'axios';\r\n\r\nexport const getAllQueue = (type) => async dispatch => {\r\n    const res = await axios.post(`https://clinic-react-spring.herokuapp.com/api/queue`,type)\r\n    console.log(res)\r\n    try{\r\n        dispatch({\r\n        type : GET_QUEUE_TABLE,\r\n        payload : res.data.body\r\n    })\r\n    }catch(error){\r\n        dispatch({\r\n        type : GET_ERRORS,\r\n        payload : res.data.body\r\n    })\r\n  }\r\n}","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport {connect} from 'react-redux';\r\nimport {getDoctorTable, accepted} from '../../actions/DoctorsActions';\r\nimport Navbar from '../Navbar';\r\n\r\n\r\nclass Doctor extends Component {\r\n    constructor(){\r\n        super()\r\n        this.state = {\r\n            errors : '',\r\n        }\r\n        this.onClick = this.onClick.bind(this);\r\n    }\r\n    \r\n     componentDidMount(){ \r\n        this.props.getDoctorTable();\r\n     }\r\n\r\n     onClick(id){\r\n        this.props.accepted(id);\r\n     }\r\n    render() {\r\n        let tartib = 0;\r\n          const tables = this.props.tables;\r\n          const {firstName, lastName, middleName, speciality} = this.props.user;\r\n    \r\n        return ( \r\n            <div className=\"doctor\">\r\n                <Navbar/>\r\n                <div className=\"row\">\r\n                    <div className=\"col-md-3 bg-primary text-center\" style={{height:'500px', color:'white'}}>\r\n                        <p style={{color:'white', fontSize:'18px', padding:'20px', width:'300px',margin:'0 auto'}} className='m-4'\r\n                        >Toshkent viloyati xususiy klinika {speciality}</p>\r\n                        <img className='card-img-top mb-4' src='/images/3.jpg' alt='rasm topilmadi'  />\r\n                        <p><strong>{firstName} {lastName} {middleName}</strong></p>\r\n                    </div>\r\n                    <div className=\"col-md-9 \">\r\n                        <table className=\"table table-bordered table-sm table-striped\">\r\n                            <thead>\r\n                            <tr className=\"text-center p-5\">\r\n                                <th>Navbat</th>\r\n                                <th>#Id raqam</th>\r\n                                <th>Bemor_ismi</th>\r\n                                <th>Bemor_Fam</th>\r\n                                <th>Bemor_tel</th>\r\n                                <th></th>\r\n                            </tr>\r\n                            </thead>\r\n                            <tbody>\r\n                                { tables.map((row) => {\r\n                                \r\n                                    return( \r\n                                       <tr className=\"text-center \" key={row.id}>\r\n                                            <td>{tartib+=1}</td>\r\n                                            <td>#{row.id}</td>\r\n                                            <td>{row.patient.firstName}</td>\r\n                                            <td>{row.patient.lastName}</td>\r\n                                            <td>{row.patient.phone}</td>\r\n                                            <td className=\"text-center\"><button onClick={() => this.onClick(row.id)} className={`${row.accepted ?\r\n                                                 \"btn btn-light\" : \"btn btn-primary\"}`}>Qabulni yakunlash</button></td>\r\n                                        </tr>\r\n                                    ) \r\n                                })}\r\n                            </tbody>\r\n                        </table>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n};\r\n\r\nDoctor.propTypes ={\r\n    getDoctorTable: PropTypes.func.isRequired,\r\n    acctepted : PropTypes.func.isRequired,\r\n    tables : PropTypes.object.isRequired,\r\n    user : PropTypes.object.isRequired\r\n\r\n};\r\n\r\nconst mapStateToPorps = state => ({\r\n    tables : state.tables.tables,\r\n    user : state.tables.user\r\n});\r\n\r\nexport default connect(mapStateToPorps, {getDoctorTable, accepted}) (Doctor);\r\n","import React from \"react\";\r\nimport { Route, Redirect } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst PrivateRoute = ({ component: Component, auth, ...rest }) => (\r\n    <Route\r\n        {...rest}\r\n        render={props =>\r\n            auth.validToken === true ? (\r\n                <Component {...props} />\r\n            ) : (\r\n                <Redirect to=\"/login\" />\r\n            )\r\n        }\r\n    />\r\n);\r\nPrivateRoute.propTypes = {\r\n    auth: PropTypes.object.isRequired\r\n};\r\nconst mapStateToProps = state => ({\r\n    auth: state.auth\r\n});\r\nexport default connect(mapStateToProps)(PrivateRoute);\r\n","import React, { Component } from 'react';\nimport {BrowserRouter, Route, Switch} from 'react-router-dom';\nimport { Provider} from 'react-redux';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport store from './store';\nimport Home from './component/Home';\nimport Wrong from './component/exceptions/Wrong';\nimport NotFound from './component/exceptions/NotFound';\nimport ListRegister from './component/ListRegister';\nimport Login from './component/authtication/Login';\nimport Admin from './component/admin/Queue';\nimport jwt_decode from 'jwt-decode';\nimport Doctor from './component/doctor/Doctor';\nimport setJWToken from './utils/setJWToken';\nimport {GET_TOKEN} from './actions/Types';\nimport PrivateRoute from './component/common/PrivateRoute';\n\n\nconst token = localStorage.jwtToken;\nif (token) {\n    setJWToken(token);\n    const decoded = jwt_decode(token)\n    store.dispatch({\n        type: GET_TOKEN,\n        payload: decoded\n    })\n\n   \n}\n\n\nclass App extends Component {\n  render(){\n    return (\n      <Provider store={store}>\n        <BrowserRouter>\n          <div className=\"App\"> \n              <Route exact path=\"/\" component={Home}/>\n              <Route exact path='/listRegister/:id' component={ListRegister} />\n              <Route exact path='/login' component={Login} />\n              <Route exact path=\"/notFound\" component={NotFound} />\n              <Route exact path=\"/wrong\" component={Wrong} />\n          </div> \n          <Switch>\n            <PrivateRoute exact path=\"/admin\" component={Admin} />\n          </Switch>\n          <Switch>\n            <PrivateRoute exact path=\"/doctor\" component={Doctor} />\n          </Switch>\n        </BrowserRouter>\n      </Provider>\n    );\n  }\n};\n\nexport default  (App);\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n"],"sourceRoot":""}